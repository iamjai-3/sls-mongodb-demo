sls create -t aws-nodejs -p sls-mongodb-demo        


sls deploy 
sls invoke --function {function name}

docker-compose up
http://localhost:4566/health  checks all services are running

list local bucket files
aws --endpoint-url http://localhost:4566/ s3 ls   

INSTALL SERVERLESS PACKAGE
npm i -g serverless

SETTING UP SERVERLESS PROFILE
serverless config credentials --provider aws --key yourkey --secret yoursecret --profile yourname 

CREATING SERVERLESS LAMBDA FUNCTION 
sls create --template aws-nodejs --path hello-world-nodejs

DEPLOYING FUNCTION
sls deploy -v

TO INVOKE AND EXECUTE AN FUNCTION
sls invoke -f hello -l

TO DEPLOY AN FUNCTION ALONE 
sls deploy -f hello 

TO FETCH LOGS OF FUNCTION
sls logs -f hello -t 

TO DESTROY AN FUNCTION
sls remove

TO UPLOAD FILE TO S3 BUCKET USING CMDLINE
aws s3 cp file or path of file s3://yourbucketname
    ex -> aws s3 cp cmds.txt s3://lambda-test-bucket-11231123


CREATE LOCAL S3-BUCKET
aws --endpoint-url http://localhost:4566/ s3 mb s3://iamjai-dev 

UPLOAD FILES TO LOCAL S3-BUCKET
aws --endpoint-url http://localhost:4566/ s3 cp cmds.txt s3://iamjai-dev 

LIST LOCAL S3-BUCKET
aws --endpoint-url http://localhost:4566/ s3 ls s3://iamjai-dev 

serverless deploy


aws --endpoint-url http://localhost:4566/ s3 mb s3://sls-test --region=ap-south-1
aws --endpoint-url http://localhost:4566/ s3 cp .\apis.zip s3://sls-test
aws --endpoint-url http://localhost:4566/ s3 ls s3://sls-test

terraform init
terraform fmt  -> to format tf files
terraform validate
terraform apply --auto-approve 


aws --endpoint-url http://localhost:4566/ lambda invoke --function-name=getFunc  output.txt

docker build . -t terraformTest
